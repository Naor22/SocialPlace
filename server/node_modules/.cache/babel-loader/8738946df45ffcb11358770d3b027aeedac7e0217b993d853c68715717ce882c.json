{"ast":null,"code":"import io from'socket.io-client';var socket;export var initializeSocket=function initializeSocket(userId){if(!socket){socket=io('http://localhost:3001',{query:{userId:userId},reconnection:true,reconnectionAttempts:5,reconnectionDelay:1000});}};export var disconnectSocket=function disconnectSocket(){if(socket){socket.disconnect();socket=null;}};export var sendMessage=function sendMessage(messageType,data,callback){if(!socket)return;socket.emit(messageType,data);if(callback){socket.once(\"\".concat(messageType,\"-response\"),callback);}};export var registerMessageHandler=function registerMessageHandler(messageType,handler){if(!socket)return;socket.on(messageType,handler);};export var unregisterMessageHandler=function unregisterMessageHandler(messageType){if(!socket)return;socket.off(messageType);};","map":{"version":3,"names":["io","socket","initializeSocket","userId","query","reconnection","reconnectionAttempts","reconnectionDelay","disconnectSocket","disconnect","sendMessage","messageType","data","callback","emit","once","concat","registerMessageHandler","handler","on","unregisterMessageHandler","off"],"sources":["C:/Users/Naor/Desktop/code/Summer Projects/SocialPlace/social/src/api/socketManager.js"],"sourcesContent":["import io from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nexport const initializeSocket = (userId) => {\r\n  if (!socket) {\r\n    socket = io('http://localhost:3001', {\r\n      query: {\r\n        userId: userId,\r\n      },\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n  }\r\n}\r\n\r\nexport const disconnectSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n}\r\n\r\nexport const sendMessage = (messageType, data, callback) => {\r\n  if (!socket) return;\r\n\r\n  socket.emit(messageType, data);\r\n\r\n  if (callback) {\r\n    socket.once(`${messageType}-response`, callback);\r\n  }\r\n}\r\n\r\nexport const registerMessageHandler = (messageType, handler) => {\r\n  if (!socket) return;\r\n\r\n  socket.on(messageType, handler);\r\n}\r\n\r\nexport const unregisterMessageHandler = (messageType) => {\r\n  if (!socket) return;\r\n  socket.off(messageType);\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,EAAE,KAAM,kBAAkB,CAEjC,GAAI,CAAAC,MAAM,CAEV,MAAO,IAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,MAAM,CAAK,CAC1C,GAAI,CAACF,MAAM,CAAE,CACXA,MAAM,CAAGD,EAAE,CAAC,uBAAuB,CAAE,CACnCI,KAAK,CAAE,CACLD,MAAM,CAAEA,MACV,CAAC,CACDE,YAAY,CAAE,IAAI,CAClBC,oBAAoB,CAAE,CAAC,CACvBC,iBAAiB,CAAE,IACrB,CAAC,CAAC,CACJ,CACF,CAAC,CAED,MAAO,IAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CACpC,GAAIP,MAAM,CAAE,CACVA,MAAM,CAACQ,UAAU,CAAC,CAAC,CACnBR,MAAM,CAAG,IAAI,CACf,CACF,CAAC,CAED,MAAO,IAAM,CAAAS,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,WAAW,CAAEC,IAAI,CAAEC,QAAQ,CAAK,CAC1D,GAAI,CAACZ,MAAM,CAAE,OAEbA,MAAM,CAACa,IAAI,CAACH,WAAW,CAAEC,IAAI,CAAC,CAE9B,GAAIC,QAAQ,CAAE,CACZZ,MAAM,CAACc,IAAI,IAAAC,MAAA,CAAIL,WAAW,cAAaE,QAAQ,CAAC,CAClD,CACF,CAAC,CAED,MAAO,IAAM,CAAAI,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAIN,WAAW,CAAEO,OAAO,CAAK,CAC9D,GAAI,CAACjB,MAAM,CAAE,OAEbA,MAAM,CAACkB,EAAE,CAACR,WAAW,CAAEO,OAAO,CAAC,CACjC,CAAC,CAED,MAAO,IAAM,CAAAE,wBAAwB,CAAG,QAA3B,CAAAA,wBAAwBA,CAAIT,WAAW,CAAK,CACvD,GAAI,CAACV,MAAM,CAAE,OACbA,MAAM,CAACoB,GAAG,CAACV,WAAW,CAAC,CACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}