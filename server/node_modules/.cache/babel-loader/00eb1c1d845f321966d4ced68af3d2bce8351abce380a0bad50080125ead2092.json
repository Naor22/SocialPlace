{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naor\\\\Desktop\\\\code\\\\Summer Projects\\\\SocialPlace\\\\social\\\\src\\\\components\\\\ChatUnit.js\",\n  _s = $RefreshSig$();\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItem from '@mui/material/ListItem';\nimport { useEffect, useState } from 'react';\nimport { sendMessage } from '../api/socketManager';\nimport { setCurrentChat, setCurrentChatContent } from '../features/chatSlice';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatUnit = ({\n  user,\n  friend\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [chatContent, setChatContent] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [lastMessage, setLastMessage] = useState({\n    userId: null,\n    content: null,\n    created_at: null\n  });\n  useEffect(() => {\n    sendMessage('checkChats', {\n      userId: user._id,\n      friendId: friend._id\n    }, response => {\n      if (response.success) {\n        setChatId(response.data._id);\n        if (response.data.messages.length > 1) {\n          const {\n            userId,\n            content,\n            created_at\n          } = response.data.messages[response.data.messages.length - 1];\n          setChatContent(response.data.messages);\n          setLastMessage({\n            userId,\n            content,\n            created_at\n          });\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    alignItems: \"flex-start\",\n    onClick: () => {\n      dispatch(setCurrentChat(chatId));\n      dispatch(setCurrentChatContent(chatContent));\n      console.log(chatContent);\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: friend.name,\n        src: friend.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: friend.name,\n      secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            display: 'inline'\n          },\n          component: \"span\",\n          variant: \"body2\",\n          color: \"text.primary\",\n          children: lastMessage.userId === null ? \"\" : lastMessage.userId.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), lastMessage.userId === null ? \"Start your first chat with \" + friend.name : lastMessage.userId.content]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, friend._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatUnit, \"CZwozCkeRf1Mj/HU8MFv1NAwhNc=\", false, function () {\n  return [useDispatch];\n});\n_c = ChatUnit;\nexport default ChatUnit;\nvar _c;\n$RefreshReg$(_c, \"ChatUnit\");","map":{"version":3,"names":["ListItemText","ListItemAvatar","Avatar","Typography","ListItem","useEffect","useState","sendMessage","setCurrentChat","setCurrentChatContent","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatUnit","user","friend","_s","dispatch","chatContent","setChatContent","chatId","setChatId","lastMessage","setLastMessage","userId","content","created_at","_id","friendId","response","success","data","messages","length","alignItems","onClick","console","log","children","alt","name","src","avatar","fileName","_jsxFileName","lineNumber","columnNumber","primary","secondary","sx","display","component","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/Naor/Desktop/code/Summer Projects/SocialPlace/social/src/components/ChatUnit.js"],"sourcesContent":["import ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { useEffect, useState } from 'react'\r\nimport { sendMessage } from '../api/socketManager'\r\nimport { setCurrentChat, setCurrentChatContent } from '../features/chatSlice';\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nconst ChatUnit = ({ user, friend }) => {\r\n    const dispatch = useDispatch()\r\n    const [chatContent, setChatContent] = useState([])\r\n    const [chatId, setChatId] = useState(null)\r\n    const [lastMessage, setLastMessage] = useState({\r\n        userId: null,\r\n        content: null,\r\n        created_at: null\r\n    })\r\n    useEffect(() => {\r\n\r\n        sendMessage('checkChats', { userId: user._id, friendId: friend._id }, (response) => {\r\n            if (response.success) {\r\n                setChatId(response.data._id)\r\n                if (response.data.messages.length > 1) {\r\n                    const { userId, content, created_at } = response.data.messages[response.data.messages.length - 1];\r\n                    setChatContent(response.data.messages)\r\n                    setLastMessage({ userId, content, created_at })\r\n\r\n\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }, [])\r\n    return (\r\n        <ListItem key={friend._id} alignItems=\"flex-start\" onClick={() => { dispatch(setCurrentChat(chatId)); dispatch(setCurrentChatContent(chatContent)); console.log(chatContent) }}>\r\n            <ListItemAvatar>\r\n                <Avatar alt={friend.name} src={friend.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={friend.name}\r\n                secondary={\r\n                    <>\r\n                        <Typography\r\n                            sx={{ display: 'inline' }}\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"text.primary\"\r\n                        >\r\n                            {lastMessage.userId === null ? \"\" : lastMessage.userId.name}\r\n                        </Typography>\r\n                        {lastMessage.userId === null ? \"Start your first chat with \" + friend.name : lastMessage.userId.content}\r\n                    </>\r\n                }\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\nexport default ChatUnit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}