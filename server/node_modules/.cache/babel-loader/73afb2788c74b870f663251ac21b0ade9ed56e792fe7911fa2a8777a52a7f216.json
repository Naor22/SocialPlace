{"ast":null,"code":"import io from 'socket.io-client';\nlet socket;\nexport const initializeSocket = userId => {\n  if (!socket) {\n    socket = io('http://localhost:3001', {\n      query: {\n        userId: userId\n      },\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n  }\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\nexport const sendMessage = (messageType, data, callback, messageId = null) => {\n  if (!socket) return;\n  if (messageId && callback) {\n    data.messageId = messageId;\n    socket.on(\"message-response\", response => {\n      if (response.messageId === messageId) {\n        socket.off(\"message-response\"); // Remove listener to avoid memory leaks\n        callback(response);\n      }\n    });\n  }\n  socket.emit(messageType, data);\n};\nexport const registerMessageHandler = (messageType, handler) => {\n  if (!socket) return;\n  socket.on(messageType, handler);\n};\nexport const unregisterMessageHandler = messageType => {\n  if (!socket) return;\n  socket.off(messageType);\n};","map":{"version":3,"names":["io","socket","initializeSocket","userId","query","reconnection","reconnectionAttempts","reconnectionDelay","disconnectSocket","disconnect","sendMessage","messageType","data","callback","messageId","on","response","off","emit","registerMessageHandler","handler","unregisterMessageHandler"],"sources":["C:/Users/Naor/Desktop/code/Summer Projects/SocialPlace/social/src/api/socketManager.js"],"sourcesContent":["import io from 'socket.io-client';\r\n\r\nlet socket;\r\n\r\nexport const initializeSocket = (userId) => {\r\n  if (!socket) {\r\n    socket = io('http://localhost:3001', {\r\n      query: {\r\n        userId: userId,\r\n      },\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n  }\r\n}\r\n\r\nexport const disconnectSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n}\r\n\r\nexport const sendMessage = (messageType, data, callback, messageId = null) => {\r\n  if (!socket) return;\r\n\r\n  if (messageId && callback) {\r\n    data.messageId = messageId;\r\n\r\n    socket.on(\"message-response\", (response) => {\r\n      if (response.messageId === messageId) {\r\n        socket.off(\"message-response\"); // Remove listener to avoid memory leaks\r\n        callback(response);\r\n      }\r\n    });\r\n  }\r\n\r\n  socket.emit(messageType, data);\r\n}\r\n\r\n\r\nexport const registerMessageHandler = (messageType, handler) => {\r\n  if (!socket) return;\r\n\r\n  socket.on(messageType, handler);\r\n}\r\n\r\nexport const unregisterMessageHandler = (messageType) => {\r\n  if (!socket) return;\r\n  socket.off(messageType);\r\n}\r\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AAEjC,IAAIC,MAAM;AAEV,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EAC1C,IAAI,CAACF,MAAM,EAAE;IACXA,MAAM,GAAGD,EAAE,CAAC,uBAAuB,EAAE;MACnCI,KAAK,EAAE;QACLD,MAAM,EAAEA;MACV,CAAC;MACDE,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAIP,MAAM,EAAE;IACVA,MAAM,CAACQ,UAAU,CAAC,CAAC;IACnBR,MAAM,GAAG,IAAI;EACf;AACF,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGA,CAACC,WAAW,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,GAAG,IAAI,KAAK;EAC5E,IAAI,CAACb,MAAM,EAAE;EAEb,IAAIa,SAAS,IAAID,QAAQ,EAAE;IACzBD,IAAI,CAACE,SAAS,GAAGA,SAAS;IAE1Bb,MAAM,CAACc,EAAE,CAAC,kBAAkB,EAAGC,QAAQ,IAAK;MAC1C,IAAIA,QAAQ,CAACF,SAAS,KAAKA,SAAS,EAAE;QACpCb,MAAM,CAACgB,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAChCJ,QAAQ,CAACG,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC;EACJ;EAEAf,MAAM,CAACiB,IAAI,CAACP,WAAW,EAAEC,IAAI,CAAC;AAChC,CAAC;AAGD,OAAO,MAAMO,sBAAsB,GAAGA,CAACR,WAAW,EAAES,OAAO,KAAK;EAC9D,IAAI,CAACnB,MAAM,EAAE;EAEbA,MAAM,CAACc,EAAE,CAACJ,WAAW,EAAES,OAAO,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAIV,WAAW,IAAK;EACvD,IAAI,CAACV,MAAM,EAAE;EACbA,MAAM,CAACgB,GAAG,CAACN,WAAW,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}