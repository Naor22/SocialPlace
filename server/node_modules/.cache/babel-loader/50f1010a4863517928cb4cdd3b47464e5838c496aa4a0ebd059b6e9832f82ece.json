{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentChat: null,\n  currentChatContent: {\n    messages: [{\n      userId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'User'\n      },\n      content: {},\n      created_at: {\n        type: Date,\n        default: Date.now\n      }\n    }]\n  }\n};\nexport const chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    setCurrentChat: (state, action) => {\n      state.currentChat = action.payload;\n    },\n    setCurrentChatContent: (state, action) => {\n      state.currentChatContent = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCurrentChat,\n  setCurrentChatContent\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentChat","currentChatContent","messages","userId","type","mongoose","Schema","Types","ObjectId","ref","content","created_at","Date","default","now","chatSlice","name","reducers","setCurrentChat","state","action","payload","setCurrentChatContent","actions","reducer"],"sources":["C:/Users/Naor/Desktop/code/Summer Projects/SocialPlace/social/src/features/chatSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    currentChat: null,\r\n    currentChatContent: {\r\n        messages: [{\r\n            userId: {\r\n                type: mongoose.Schema.Types.ObjectId,\r\n                ref: 'User',\r\n            },\r\n            content: {\r\n               \r\n            },\r\n            created_at: {\r\n                type: Date,\r\n                default: Date.now,\r\n            },\r\n        }],\r\n    }\r\n};\r\n\r\n\r\nexport const chatSlice = createSlice({\r\n    name: 'chat',\r\n    initialState,\r\n    reducers: {\r\n        setCurrentChat: (state, action) => {\r\n            state.currentChat = action.payload;\r\n        },\r\n        setCurrentChatContent: (state, action) => {\r\n            state.currentChatContent = action.payload;\r\n        }\r\n    },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setCurrentChat, setCurrentChatContent } = chatSlice.actions\r\n\r\nexport default chatSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,IAAI;EACjBC,kBAAkB,EAAE;IAChBC,QAAQ,EAAE,CAAC;MACPC,MAAM,EAAE;QACJC,IAAI,EAAEC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAACC,QAAQ;QACpCC,GAAG,EAAE;MACT,CAAC;MACDC,OAAO,EAAE,CAET,CAAC;MACDC,UAAU,EAAE;QACRP,IAAI,EAAEQ,IAAI;QACVC,OAAO,EAAED,IAAI,CAACE;MAClB;IACJ,CAAC;EACL;AACJ,CAAC;AAGD,OAAO,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EACjCkB,IAAI,EAAE,MAAM;EACZjB,YAAY;EACZkB,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACnB,WAAW,GAAGoB,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,qBAAqB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAAClB,kBAAkB,GAAGmB,MAAM,CAACC,OAAO;IAC7C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH,cAAc;EAAEI;AAAsB,CAAC,GAAGP,SAAS,CAACQ,OAAO;AAE1E,eAAeR,SAAS,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}