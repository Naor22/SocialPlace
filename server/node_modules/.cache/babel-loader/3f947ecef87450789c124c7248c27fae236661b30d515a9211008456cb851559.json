{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naor\\\\Desktop\\\\code\\\\Summer Projects\\\\SocialPlace\\\\social\\\\src\\\\components\\\\ChatUnit.js\",\n  _s = $RefreshSig$();\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItem from '@mui/material/ListItem';\nimport { useEffect, useState, useRef } from 'react';\nimport { sendMessage } from '../api/socketManager';\nimport { setCurrentChat, setCurrentChatContent } from '../features/chatSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatUnit = ({\n  user,\n  friend,\n  isSelected,\n  onSelect\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [userHasInteracted, setUserHasInteracted] = useState(false);\n  const [chatContent, setChatContent] = useState([]);\n  const [chatId, setChatId] = useState(null);\n  const [chatUpdate, setChatUpdate] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [dataFetched, setDataFetched] = useState(false);\n  const [lastMessage, setLastMessage] = useState({\n    userId: null,\n    content: null,\n    created_at: null\n  });\n  const chatContentSelector = useSelector(state => state.chat.currentChatContent);\n  const currentChat = useSelector(state => state.chat.currentChat);\n  let exists = true;\n  useEffect(() => {\n    sendMessage('checkChats', {\n      userId: user._id,\n      friendId: friend._id\n    }, response => {\n      if (response.success) {\n        if (userHasInteracted) setChatId(response.data._id);\n        if (response.data.messages.length >= 1 && response.data.users.some(user => user._id == friend._id)) {\n          exists = true;\n          const {\n            userId,\n            content,\n            created_at\n          } = response.data.messages[response.data.messages.length - 1];\n          setChatContent(response.data.messages);\n          setLastMessage({\n            userId,\n            content,\n            created_at\n          });\n        }\n        setDataFetched(true);\n      }\n    });\n    setLoading(false);\n  }, [chatUpdate, userHasInteracted]);\n  useEffect(() => {\n    if (dataFetched) {\n      dispatch(setCurrentChat(chatId));\n      dispatch(setCurrentChatContent(chatContent));\n      setDataFetched(false);\n    }\n  }, [dataFetched, chatId, chatContent, dispatch]);\n  const handleClick = () => {\n    setUserHasInteracted(true);\n    setChatUpdate(prev => !prev);\n    onSelect();\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    alignItems: \"flex-start\",\n    onClick: () => handleClick(),\n    style: {\n      backgroundColor: isSelected ? 'lightgray' : 'transparent'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: friend.name,\n        src: friend.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: friend.name,\n      secondary: !currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            display: 'inline'\n          },\n          component: \"span\",\n          variant: \"body2\",\n          color: \"text.primary\",\n          children: lastMessage.userId === null ? \"\" : lastMessage.userId.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), lastMessage.userId === null ? \"Start your first chat with \" + friend.name : \" : \" + lastMessage.content]\n      }, void 0, true) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, friend._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatUnit, \"CMsDPQBl4PzNJsWV7vSWvkmfGTw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ChatUnit;\nexport default ChatUnit;\nvar _c;\n$RefreshReg$(_c, \"ChatUnit\");","map":{"version":3,"names":["ListItemText","ListItemAvatar","Avatar","Typography","ListItem","useEffect","useState","useRef","sendMessage","setCurrentChat","setCurrentChatContent","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatUnit","user","friend","isSelected","onSelect","_s","dispatch","userHasInteracted","setUserHasInteracted","chatContent","setChatContent","chatId","setChatId","chatUpdate","setChatUpdate","loading","setLoading","dataFetched","setDataFetched","lastMessage","setLastMessage","userId","content","created_at","chatContentSelector","state","chat","currentChatContent","currentChat","exists","_id","friendId","response","success","data","messages","length","users","some","handleClick","prev","alignItems","onClick","style","backgroundColor","children","alt","name","src","avatar","fileName","_jsxFileName","lineNumber","columnNumber","primary","secondary","sx","display","component","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/Naor/Desktop/code/Summer Projects/SocialPlace/social/src/components/ChatUnit.js"],"sourcesContent":["import ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { sendMessage } from '../api/socketManager'\r\nimport { setCurrentChat, setCurrentChatContent } from '../features/chatSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ChatUnit = ({ user, friend, isSelected, onSelect }) => {\r\n    const dispatch = useDispatch()\r\n    const [userHasInteracted, setUserHasInteracted] = useState(false);\r\n    const [chatContent, setChatContent] = useState([])\r\n    const [chatId, setChatId] = useState(null)\r\n    const [chatUpdate, setChatUpdate] = useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n    const [dataFetched, setDataFetched] = useState(false);\r\n    const [lastMessage, setLastMessage] = useState({\r\n        userId: null,\r\n        content: null,\r\n        created_at: null\r\n    })\r\n    const chatContentSelector = useSelector(state => state.chat.currentChatContent)\r\n    const currentChat = useSelector(state => state.chat.currentChat)\r\n    let exists = true\r\n    useEffect(() => {\r\n\r\n        sendMessage('checkChats', { userId: user._id, friendId: friend._id }, (response) => {\r\n            if (response.success) {\r\n                if (userHasInteracted)\r\n                    setChatId(response.data._id);\r\n\r\n                if (response.data.messages.length >= 1 && response.data.users.some(user => user._id == friend._id)) {\r\n                    exists = true;\r\n                    const { userId, content, created_at } = response.data.messages[response.data.messages.length - 1];\r\n                    setChatContent(response.data.messages);\r\n                    setLastMessage({ userId, content, created_at });\r\n\r\n\r\n                }\r\n                setDataFetched(true);\r\n\r\n\r\n            }\r\n\r\n        });\r\n\r\n        setLoading(false);\r\n    }, [chatUpdate, userHasInteracted]);\r\n\r\n    useEffect(() => {\r\n        if (dataFetched) {\r\n            dispatch(setCurrentChat(chatId));\r\n            dispatch(setCurrentChatContent(chatContent));\r\n            setDataFetched(false);\r\n        }\r\n    }, [dataFetched, chatId, chatContent, dispatch]);\r\n    const handleClick = () => {\r\n        setUserHasInteracted(true);\r\n        setChatUpdate(prev => !prev);\r\n        onSelect();\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <ListItem key={friend._id} alignItems=\"flex-start\" onClick={() => handleClick()} style={{ backgroundColor: isSelected ? 'lightgray' : 'transparent' }} >\r\n            <ListItemAvatar>\r\n                <Avatar alt={friend.name} src={friend.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={friend.name}\r\n                secondary={\r\n                    !currentChat ? (\r\n                        <>\r\n                            <Typography\r\n                                sx={{ display: 'inline' }}\r\n                                component=\"span\"\r\n                                variant=\"body2\"\r\n                                color=\"text.primary\"\r\n                            >\r\n\r\n                                {lastMessage.userId === null ? \"\" : lastMessage.userId.name}\r\n                            </Typography>\r\n                            {lastMessage.userId === null ? \"Start your first chat with \" + friend.name : \" : \" + lastMessage.content}\r\n\r\n                        </>\r\n                    ) : \"\"\r\n                }\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\nexport default ChatUnit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}